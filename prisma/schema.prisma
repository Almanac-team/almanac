// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider     = "mysql"
  // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

// Items

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  activities    Activity[]
  settings UserSettings? // in the case this is null, just give defaults
}

// going to put this off for now lmao
enum Timezone {
    AfricaAbidjan
    AfricaAlgiers
    // do you want all of these as time zones xd
    // https://nodatime.org/TimeZones
}

enum DateFormat {
    DayMonthYear
    MonthDayYear
    YearMonthDay
}

enum TimeFormat {
    MidDay
    Military
}
model UserSettings {
    id String @id @default(cuid())
    timezone Timezone @default(AfricaAbidjan)
    dateFormat DateFormat
    timeFormat TimeFormat
    userId String @unique
    user User @relation(fields: [userId], references: [id])

}

enum ActivityType {
  task
  event
}

model Activity {
  id      String       @id @default(cuid())
  ownerId String
  name    String
  owner   User         @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  type    ActivityType @default(task)
  task    Task?
  event   Event?
}

// Task - something to be finished by a set time
model Task {
  activityId    String   @id
  dueDate       DateTime
  estimatedTime BigInt
  deadlineMod   BigInt
  reminderMod   BigInt
  startMod      BigInt
  activity      Activity @relation(fields: [activityId], references: [id])
}

// Event - something to do at a set time
model Event {
  activityId    String   @id
  generated     Boolean
  startDate     DateTime
  estimatedTime BigInt
  reminderMod   BigInt
  startMod      BigInt
  activity      Activity @relation(fields: [activityId], references: [id])
}
